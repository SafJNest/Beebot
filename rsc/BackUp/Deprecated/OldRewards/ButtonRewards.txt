private void rewardsButtonEvent(ButtonInteractionEvent event) {
        if(!event.getMember().hasPermission(Permission.ADMINISTRATOR)){
            event.deferReply(true).addContent("You don't have the permission to do that.").queue();
            return;
        }
        String args = event.getButton().getId().substring(event.getButton().getId().indexOf("-") + 1);
        
        switch (args){
            case "add":
                TextInput subject = TextInput.create("rewards-lvl", "Level", TextInputStyle.SHORT)
                    .setPlaceholder("1")
                    .setMinLength(1)
                    .setMaxLength(100) // or setRequiredRange(10, 100)
                    .build();

                TextInput body = TextInput.create("rewards-message", "Message (write // for no message)", TextInputStyle.PARAGRAPH)
                        .setPlaceholder("Contratulation #user you have reached level #level so you gain the role: #role")
                        .setMinLength(2)
                        .setMaxLength(1000)
                        .build();
                
                TextInput role = TextInput.create("rewards-role", "Role (@rolename)", TextInputStyle.SHORT)
                        .setPlaceholder("@king")
                        .setMinLength(2)
                        .setMaxLength(20)
                        .build();

                Modal modal = Modal.create("rewards", "Set a new Reward")
                        .addComponents(ActionRow.of(subject), ActionRow.of(body), ActionRow.of(role))
                        .build();
                event.replyModal(modal).queue();
            break;

            default:
                if(event.getButton().getId().startsWith("rewards-role-")){
                    if(event.getButton().getStyle() == ButtonStyle.DANGER){
                        String roleString = event.getButton().getId().split("-")[2];
                        DatabaseHandler.deleteReward(roleString);
                        event.deferEdit().queue();
                        
                        RewardsSlash.createEmbed(event.getMessage()).queue();
                        return;
                    }
                    //modify button style into danger
                    
                    event.editButton(event.getButton().withStyle(ButtonStyle.DANGER)).queue();
                }
            break;
        }
    }